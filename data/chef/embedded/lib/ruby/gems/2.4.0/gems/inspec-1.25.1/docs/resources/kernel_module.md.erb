---
title: About the kernel_module Resource
---

# kernel_module

Use the `kernel_module` InSpec audit resource to test kernel modules on Linux platforms. These parameters are located under `/lib/modules`. Any submodule may be tested using this resource.

## Syntax

A `kernel_module` resource block declares a module name, and then tests if that module is a loadable kernel module:

    describe kernel_module('module_name') do
      it { should be_loaded }
    end

where

* `'module_name'` must specify a kernel module, such as `'bridge'`
* `{ should be_loaded }` tests if the module is a loadable kernel module

## Matchers

This InSpec audit resource has the following matchers:

### be

<%= partial "/shared/matcher_be" %>

### be_loaded

The `be_loaded` matcher tests if the module is a loadable kernel module:

    it { should be_loaded }

### cmp

<%= partial "/shared/matcher_cmp" %>

### eq

<%= partial "/shared/matcher_eq" %>

### include

<%= partial "/shared/matcher_include" %>

### match

<%= partial "/shared/matcher_match" %>

### version

The `version` matcher tests if the named module version is on the system:

    its(:version) { should eq '3.2.2' }

## Examples

The following examples show how to use this InSpec audit resource.

### Test if a module is loaded

    describe kernel_module('bridge') do
      it { should be_loaded }
      its(:version) { should cmp >= '2.2.2' }
    end
